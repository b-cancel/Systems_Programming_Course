HOW TO RUN: compile ONLY the "commandLineInterpreter.c" with gcc

For Easy Access The Intermediate File Will Be Formatted As Such

For Every Line Of Code In Between START and END (including comments) we will have 8 lines in the intermediate file
	-the special errors are not nessesarily between START and END
	-these lines are present regardless of whether or not we have something to be displayed on that line
[1]copy of source line
[2]location counter
[3]label 
[4]mnemonic ([operations] -or- [directive])
[5]operand
[6]comment
[7]errors
[\n]

----------Error Codes (will be surround by 2 Xs... EX: x000x)
---Special Codes [0]
000 -> "fileName" was not found -or- did not open properly
010 -> no START directive found with a valid operand
020 -> no END directive found (make sure there is some space in front of your END directive [space != label])
030 -> START directive with invalid operand because it isn't a base 16 number [label validity not checked]
040 -> START directive with invalid operand because its larger than (FFFF) base 16 [label validity not checked]
---Label Codes [1]
100 -> duplicate label
110 -> symbol table exceeded 500 label limit
120 -> label has invalid name that starts with a digit
130 -> label is too long
140 -> only a label was found so we are missing an operation
---Mneumonic Codes [2]
200 -> you have an extra START directive
210 -> invalid mneumonic (operation -or- directive )
---Operand Codes(for operations) [3]
300 -> missing operand
310 -> operand hex number must be in bytes, so you must have an even digit count
320 -> operand must be a number in hex
330 -> operand label you are referencing does not exist
340 -> operand must be a number in dec
350 -> operand will cause LOCCTR to overflow because its max size is FFFF
360 -> operand is too large to be saved in a word
---Operand Codes(for directives) [4]
400 -> missing operand
410 -> operand must be a number in hex
420 -> operand label you are referencing does not exist
430 -> operand larger than 30 character max
440 -> operand larger than 16 byte max
450 -> operand hex number must be in bytes, so you must have an even digit count
460 -> operand must be a string or hex value with marker 'c' or 'x'
---misc Codes [9]
900 -> program length above 32768 byte limit
901 -> LOCCTR is too big and should be smaller than (FFFF) base 16

NOTE: you told us not to implement ERROR CODES 330 -or- 420... so they are there but will not function (for now)

//ERRORS my sample program does not test (but i tested myself): 000, 010, 110, 900
//ERRORS my sample program does test: 020, 100, 120, 130, 200, 210, 300, 310, 320, 400, 410, 430, 440, 450, 460