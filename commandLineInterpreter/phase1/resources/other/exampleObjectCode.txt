//NOTE: I am including comments although obviously object code should have comments
//this is the object code that should be created by examplesource.txt

//----------TO LEARN LIST
	why is it jumping so much midway?
	how is it deciding to go to a seperate line?
	
//----------BROKEN DOWN OBJECT CODE
Header Record --- 6 byte starting location --- 6 bytes for program size
HCOPY ---  		  001000 --- 				   00107A

Code Record --- 6 byte address ---  2 byte size of instruct --- object code generated in assembly
T ---			001000 --- 			1E --- 						1410334820390010362810303010154820613C100300102A0C103900102D
T --- 			00101E --- 			15 --- 						0C10364820610810334C0000454F46000003000000
*NOTE: here we jumped forward by 101B for reason unknown as of now... the rest use (next address = current address+size)
T --- 		    002039 --- 			1E --- 						041030001030E0205D30203FD8205D2810303020575490392C205E38203F
T --- 			002057 --- 			1C --- 						1010364C0000F1001000041030E02079302064509039DC20792C1036
T --- 			002073 --- 			07 --- 						3820644C000006

Linkage Record --- 

End Record --- 6 byte starting location (I think)
E --- 		   001000 

//1st Text Record
1. address where text record started (2 0s in front)
2. 1E = quantity of bytes in3 3(30 max) [calculated last]
3. 10*6=60 digits... 2 digits are 1 byte... we have max of 30 bytes

//2nd Text Record
1. ditto
2. 7*6 = 42 => 21 bytes = 15 (why not fully 30?) RESW(3 bytes = 1 word) RESW (3 bytes = 1) RESB (1 bytes)... still 2 bytes of space for the full 30 (cant be taken advantage of because every instruction is 3 bytes... unless its another RESB)

//----------ACTUAL OBJECT CODE(instructions will always be in byte groups)
---
HCOPY 001000'00107A 
---
T'001000'1E'141033'482039'001036'281030'301015'482061'3C1003'00102A'0C1039'00102D
---
T'00101E'15'0C1036'482061'081033'4C0000'454F46'000003'000000
---
T'002039'1E'041030'001030'E0205D'30203F'D8205D'281030'302057'549039'2C205E'38203F
---
T'002057'1C'101036'4C0000'F1'001000'041030'E02079'302064'509039'DC2079'2C1036
---
T'002073'07'382064'4C0000'06
---
E'001000 

HCOPY 001000'00107A
T0010001E1410334820390010362810303010154820613C100300102A0C103900102D
T00101E150C10364820610810334C0000454F46000003000000
T0020391E041030001030E0205D30203FD8205D2810303020575490392C205E38203F
T0020571C1010364C0000F1001000041030E02079302064509039DC20792C1036
T002073'07'3820644C000006
T002073' 7'3820644C000005
E001000 

//output all object code instructions(in different lines)
//output when we begin reading in a new line (which is when we will write to the file)
//do the above when we reach the end record
//indicate that we would be writing a text record here

//actually print our object file
//actually write our object file to the object file text file