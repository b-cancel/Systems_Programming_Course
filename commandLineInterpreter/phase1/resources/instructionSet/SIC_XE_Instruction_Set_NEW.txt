(label or label,x) 	Mnemonic 	Opcode 	Effect

(-----) ADD m 				18 		A <- (A) + (m..m+2)
(-----) AND m 				58 		A <- (A) & (m..m+2) [bitwise]
(label) COMP m 		28 		cond code <- (A) : (m..m+2)
(-----) DIV m 		24 		A <- (A) / (m..m+2)
(label) J m 		3C 		PC <- m
(label) JEQ m 		30 		PC <- m if cond code set to =
(label) JGT m 		34 		PC <- m if cond code set to >
(label) JLT m 		38 		PC <- m if cond code set to <
(label) JSUB m 		48 		L <- (PC); PC <- m
(label) LDA m 		00 		A <- (m..m+2)
(label) LDCH m 		50 		A[rightmost byte] <- (m)
(label) LDL m 		08 		L <- (m..m+2)
(label) LDX m 		04 		X <- (m..m+2)
(-----) MUL m 				20 		A <- (A) * (m..m+2)
(-----) OR m 				44 		A <- (A) | (m..m+2) [bitwise]
(label) RD m 				D8 		A[rightmost byte] <- data from device specified by (m)
(NO OPERAND) RSUB 	4C 		PC <- (L)
(label) STA m 		0C 		m..m+2 <- (A)
(label) STCH m 				54 		m <- (A)[rightmost byte]
(label) STL m 		14 		m..m+2 <- (L)
(label) STX m 		10 		m..m+2 <- (X)
(-----) SUB m 				1C 		A <- (A) - (m..m+2)
(label) TD m 		E0 		Test device specified by (m)
(label) TIX m 		2C 		X <- (X) + 1; compare X and (m..m+2)
(label) WD m 		DC 		Device specified by (m) <- (A)[rightmost byte]

SIC Assembler Directives

START n(base 10) 	Program is to be loaded at location n (given in hexadecimal)
END label 	Physical end of program; label is first executable program statement
BYTE v 		Stores either character strings (C'...') or hexadecimal values (X'...')
WORD v 		Stores the value v in a WORD
RESB n(base 10) 		Reserves space for n bytes
RESW n(base 10) 		Reserves space for n words (3n bytes)